name: Reusable - Terraform

on:
  workflow_call:
    inputs:
      aws-region:
        required: true
        type: string
      terraform-directory-path:
        required: true
        type: string
      terraform-version:
        required: true
        type: string
        
permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::767397811632:group/pipeline
          aws-region: ${{ inputs.aws-region }}

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform-version }}

      - name: Terraform init
        working-directory: ${{ inputs.terraform-directory-path }}
        run: |
          terraform init

      - name: Terraform validate
        working-directory: ${{ inputs.terraform-directory-path }}
        run: |
          terraform validate -no-color

      - name: Terraform plan
        working-directory: ${{ inputs.terraform-directory-path }}
        run: |
          terraform plan -no-color


  terraform-apply:
    name: Terraform apply
    needs:
      - terraform-plan
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::767397811632:group/pipeline
          aws-region: ${{ inputs.aws-region }}

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform-version }}

      - name: Terraform init
        working-directory: ${{ inputs.terraform-directory-path }}
        run: |
          terraform init

      - name: Terraform apply
        working-directory: ${{ inputs.terraform-directory-path }}
        run: |
          terraform apply -auto-approve

      - name: Terraform output
        working-directory: ${{ inputs.terraform-directory-path }}
        run: |
          terraform output
